#include<stdio.h>
#include<string.h>
#include<windows.h>
void findpal();
int findpalof(int l, int r);
char mat[200][100];
//char matcol[100][100];
int maxlen;
int main () {
	     maxlen = 1;
		char temp;
	    int len,i,g,j;
	for(g = 1; g < 11; g++) {
		maxlen = 1;
		scanf("%d", &i);
		scanf("%c", &temp);
		for (i = 0; i < 100; i++) {
		    scanf("%[^\n]s", mat[i]);
		    scanf("%c", &temp);
		//	printf("strings are %s \n", mat[i]);
		}
		for (i = 0; i<100; i++) {
			for(j=0;j<100;j++) {
			    mat[i+100][j] = mat[j][i];
			//printf("%c", mat[i+100][j]);
			}
			mat[i+100][j] = '\0';
			//printf("\n");
			 
		}
	    //printf("\n");

		findpal();
		printf("#%d %d\n", g,maxlen);
	}

	Sleep(100000);
	return 0;

}


void findpal() {
	//len =1;
	
	int ret,d,i;
	for (d = 0; d < 200; d++) {
	for(i = 100; i>maxlen;i--) {
	ret = findpalof(i,d);
	//printf("ret = %d for i %d and d %d\n",ret,i,d);
	if(ret == 1) {
		maxlen = i;
	//	printf("ret = %d for i %d and d %d\n",ret,i,d);
		break;
	}
	}
	}
}

int findpalof(int l, int r) {
	int found,i,j = 0;
	for (i = 0; i < 100-l+1; i++) {
		found = 0;
		for (j = 0; j < l/2; j++) {
			if (mat[r][j+i] == mat[r][l+i-j-1]) {
				found = 1;
				continue;
			} else {
				found = 0;
				break;
			}
		}
		if (found == 1) return 1;
	}

    return 0;
}
