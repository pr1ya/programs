#include<stdio.h>
#include<windows.h>

struct queue {
	int val;
	queue *next;
};

struct queue *head;
void calc();
void push(int a);
int pop();
int ip[8];
int op[8];

void push(int a) {
    struct queue *n;
	//printf("pushing %d\n", a);
	n = (struct queue *)malloc(sizeof(struct queue));
	n->val = a;
	n->next = head;
	head = n;
 }

int pop() {
	int ret;
	struct queue *n, *p;
	n = (struct queue *)malloc(sizeof(struct queue));
	p = (struct queue *)malloc(sizeof(struct queue));
	if (head == NULL) 
		return -1;
	n = head;
	p = head;
	if (head ->next == NULL) {
	ret = head->val;
	head = NULL;
	}
	
	while(n->next != NULL) {
		p = n;
		n = n->next;
	}
	
	//printf("popping %d\n",n->val);
	ret = n->val;
	p->next = NULL;

	return ret;
}

int main() {
	int i , j, k, ret;

	for (i = 1; i < 11; i++) {
		head = NULL;
		scanf("%d\n", &j);
		for (j = 0; j < 8; j++) {
			ip[j] = 0;
			op[j] = 0;
		}
		for (j = 0; j < 8; j++) {
			scanf("%d", &ip[j]);
		}
		for (j = 0; j < 8; j++) {
			push(ip[j]);
		}

	    calc();

		for (j = 0; j < 8; j++) {
			op[j] = pop();
		}
	    printf("#%d", i);
    	for (j = 0; j < 8; j++) {
	    	printf(" %d",op[j]);
	    }
		printf("\n");
	}
    Sleep(100000);
}

void calc() {
	int m,n = 0;
	while(1) {
		for (m = 1; m < 6; m++) {
            n = pop();
			n-=m;
			if(n<=0) {
				push(0);
				goto exit;
			} else {
				push(n);
			}
		}
	}
    exit:
	return;
}
